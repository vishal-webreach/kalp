{"version":3,"file":"about.BExltoSa.js","sources":["../../src/js/about.js"],"sourcesContent":["import { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport { ScrollSmoother } from \"gsap/ScrollSmoother\";\r\nimport logo from '@assets/images/logo.png';\r\nimport whitelogo from '@assets/images/white-logo.png';\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\r\n  gsap.registerPlugin(ScrollTrigger, ScrollSmoother);\r\n\r\n  // Init smoother\r\n  ScrollSmoother.create({\r\n    wrapper: \"#smooth-wrapper\",\r\n    content: \"#smooth-content\",\r\n    smooth: 2,\r\n    effects: true,\r\n  });\r\n\r\n \r\n\r\n  const tl6 = gsap.timeline();\r\n\r\n  tl6.to(\".loader-text\", {\r\n    opacity: 1,\r\n    duration: 1,\r\n    yoyo: true,\r\n    repeat: 1\r\n  });\r\n\r\n  tl6.to(\"#loader\", {\r\n    opacity: 0,\r\n    duration: 1,\r\n    delay: 0.8,\r\n    onComplete: () => {\r\n      document.getElementById(\"loader\").style.display = \"none\";\r\n    }\r\n  });\r\n\r\n\r\n    ScrollTrigger.create({\r\n      trigger: \".section-2\",\r\n      start: \"95% bottom\",\r\n      scrub: true,\r\n      end: \"bottom bottom\",\r\n      onEnter: () => {\r\n        document.querySelector(\"header .logo img\").src = whitelogo;\r\n      },\r\n      onLeaveBack: () => {\r\n        document.querySelector(\"header .logo img\").src = logo;\r\n      },\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    });\r\n\r\n\r\n    const tl1 = gsap.timeline({\r\n      scrollTrigger:{\r\n        trigger: '.section-2',\r\n        start: \"95% bottom\",\r\n        scrub: true,\r\n        end: \"bottom bottom\",\r\n        // markers: true,\r\n      }\r\n    });\r\n\r\n    tl1.to('header',{\r\n      backgroundColor: 'black',\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    },\"same2\")\r\n    \r\n    tl1.to('header .logo',{\r\n      opacity: 1,\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    },\"same2\")\r\n\r\n    tl1.to('header .black',{\r\n      backgroundColor: '#000000',\r\n      color: '#ffffff',\r\n      borderColor: '#ffffff',\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    },\"same2\")\r\n\r\n\r\nconst panel = document.querySelector(\".section-2\");\r\nconst items = document.querySelectorAll(\".item\");\r\nconst star = document.querySelector(\".star\");\r\nconst visibleCount = 3;\r\nconst totalItems = items.length;\r\n\r\n// Calculate total items height for scroll distance\r\nfunction getItemsTotalHeight() {\r\n  let total = 0;\r\n  items.forEach(item => {\r\n    total += item.offsetHeight;\r\n  });\r\n  return total;\r\n}\r\n\r\n// Helper to center active item\r\nfunction getColumnYPercent(activeIndex) {\r\n  const centerOffset = Math.floor(visibleCount / 2);\r\n  const firstY = (centerOffset / totalItems) * 100;\r\n  const lastY = -((totalItems - 1 - centerOffset) / totalItems * 100);\r\n\r\n  if (totalItems <= visibleCount) return 0;\r\n\r\n  const t = activeIndex / (totalItems - 1);\r\n  return firstY + (lastY - firstY) * t;\r\n}\r\n\r\n// On load â†’ center first item immediately\r\ngsap.set(\".column\", {\r\n  yPercent: getColumnYPercent(0)\r\n});\r\n\r\n// Track star rotation\r\nlet starRotation = 0;\r\nlet isScrolling = false; // Flag to throttle scroll events\r\n\r\n// Throttle function to limit rotation frequency\r\nfunction throttle(func, wait) {\r\n  let timeout;\r\n  return function (...args) {\r\n    if (!timeout) {\r\n      timeout = setTimeout(() => {\r\n        timeout = null;\r\n        func.apply(this, args);\r\n      }, wait);\r\n    }\r\n  };\r\n}\r\n\r\nlet scrollAnim = gsap.timeline({\r\n  scrollTrigger: {\r\n    trigger: panel,\r\n    start: \"top top\",\r\n    end: () => \"+=\" + (getItemsTotalHeight() * 5),\r\n    pin: true,\r\n    scrub: 1.2,\r\n    snap: {\r\n      snapTo: (value) => {\r\n        // snap progress to nearest item index\r\n        let step = 1 / (totalItems - 1);\r\n        return Math.round(value / step) * step;\r\n      },\r\n      duration: 0.6, // snap animation duration\r\n      ease: \"power2.out\"\r\n    },\r\n    onUpdate: (self) => {\r\n      const progress = self.progress;\r\n      let activeIndex = Math.round(progress * (totalItems - 1));\r\n      activeIndex = Math.max(0, Math.min(activeIndex, totalItems - 1));\r\n\r\n      // Rotate star\r\n      gsap.to(star, {\r\n        rotation: activeIndex * -45,\r\n        duration: 0.6,\r\n        ease: \"power2.out\",\r\n        overwrite: \"auto\"\r\n      });\r\n\r\n      // Items\r\n      items.forEach((item, i) => {\r\n        item.classList.toggle(\"active\", i === activeIndex);\r\n\r\n        if (i === activeIndex) {\r\n          gsap.to(item, { rotate: 0, duration: 0.4, overwrite: \"auto\" });\r\n        }\r\n\r\n        const amplitude = 40;\r\n        const x = -amplitude * Math.pow(progress - 0.5, 2) + amplitude / 4;\r\n        gsap.to(item, { x, duration: 0.4, overwrite: \"auto\" });\r\n      });\r\n\r\n      // Column centering\r\n      const yPercent = getColumnYPercent(activeIndex);\r\n      gsap.to(\".column\", {\r\n        yPercent,\r\n        duration: 0.8,\r\n        ease: \"power3.out\",\r\n        overwrite: \"auto\",\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\n\r\n// const panel = document.querySelector(\".section-2\");\r\n// const items = document.querySelectorAll(\".item\");\r\n// const star = document.querySelector(\".star\");\r\n// const visibleCount = 3;\r\n// const totalItems = items.length;\r\n\r\n// let scrollAnim = gsap.timeline({\r\n//   scrollTrigger: {\r\n//     trigger: panel,\r\n//     start: \"top top\",\r\n//     end: `+=${panel.offsetHeight}`,\r\n//     pin: true,\r\n//     scrub: true,\r\n//     onUpdate: (self) => {\r\n//       const progress = self.progress;\r\n\r\n//       let activeIndex = Math.floor(progress * (totalItems - 1));\r\n//       activeIndex = Math.max(0, Math.min(activeIndex, totalItems - 1));\r\n\r\n//       items.forEach((item, i) => {\r\n//         item.classList.toggle(\"active\", i === activeIndex);\r\n//       });\r\n//     }\r\n//   }\r\n// });\r\n\r\n// scrollAnim.to(\".column\", {\r\n//   yPercent: -((totalItems - visibleCount) / totalItems) * 100,\r\n//   ease: \"none\"\r\n// }, 0);\r\n\r\n// scrollAnim.to(star, {\r\n//   rotation: -360,\r\n//   ease: \"none\"\r\n// }, 0);\r\n\r\n\r\n    ScrollTrigger.create({\r\n      trigger: \".section-3\",\r\n      start: \"18% center\",\r\n      scrub: true,\r\n      end: \"23% center\",\r\n      onEnter: () => {\r\n        document.querySelector(\"header .logo img\").src = logo;\r\n      },\r\n      onLeaveBack: () => {\r\n        document.querySelector(\"header .logo img\").src = whitelogo;\r\n      },\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    });\r\n\r\n\r\n    const tl2 = gsap.timeline({\r\n      scrollTrigger:{\r\n        trigger: '.section-3',\r\n        start: \"15% center\",\r\n        scrub: true,\r\n        end: \"20% center\",\r\n        // markers: true,\r\n      }\r\n    });\r\n\r\n    tl2.to('header',{\r\n      backgroundColor: 'white',\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    },\"same2\")\r\n\r\n    \r\n    tl2.to('header .black',{\r\n      backgroundColor: '#000000',\r\n      color: '#ffffff',\r\n      borderColor: '#000000',\r\n      ease: \"power1.inOut\",\r\n      duration: 0.5\r\n    },\"same2\")\r\n\r\n    tl2.to('header .white',{\r\n      backgroundColor: '#ffffff',\r\n      color: '#00000',\r\n      borderColor: '#000000',\r\n      ease: \"power1.inOut\",\r\n      duration: 0.5\r\n    },\"same2\")\r\n\r\n\r\n    ScrollTrigger.create({\r\n      trigger: \".section-4\",\r\n      start: \"90% bottom\",\r\n      scrub: true,\r\n      end: \"bottom bottom\",\r\n      onEnter: () => {\r\n        document.querySelector(\"header .logo img\").src = whitelogo;\r\n      },\r\n      onLeaveBack: () => {\r\n        document.querySelector(\"header .logo img\").src = logo;\r\n      },\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    });\r\n\r\n\r\n    const tl3 = gsap.timeline({\r\n      scrollTrigger:{\r\n        trigger: '.section-4',\r\n        start: \"90% bottom\",\r\n        scrub: true,\r\n        end: \"bottom bottom\",\r\n        // markers: true,\r\n      }\r\n    });\r\n\r\n    tl3.to('header',{\r\n      backgroundColor: 'black',\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    },\"same2\")\r\n\r\n    \r\n    tl3.to('header .black',{\r\n      backgroundColor: '#000000',\r\n      color: '#ffffff',\r\n      borderColor: '#ffffff',\r\n      ease: \"power1.inOut\",\r\n      duration: 0.5\r\n    },\"same2\")\r\n\r\n    tl3.to('header .white',{\r\n      backgroundColor: '#ffffff',\r\n      color: '#000000',\r\n      borderColor: '#ffffff',\r\n      ease: \"power1.inOut\",\r\n      duration: 0.5\r\n    },\"same2\")\r\n\r\n    if (window.innerWidth > 1024) {\r\n\r\n    const panell   = document.querySelector('.section-4');\r\n    const years    = Array.from(document.querySelectorAll('.year'));\r\n    const segments = Array.from(document.querySelectorAll('.segment'));\r\n    const contents = Array.from(document.querySelectorAll('.content'));\r\n    const yearsCol = document.getElementById('years-col');\r\n\r\n    // Measure exact gap between consecutive years; store on segment.dataset.full\r\n    function computeSegmentHeights() {\r\n      segments.forEach((seg, i) => {\r\n        const y1 = years[i];\r\n        const y2 = years[i + 1];\r\n        if (!y1 || !y2) return;\r\n        const y1Bottom = y1.offsetTop + y1.offsetHeight; // within same column\r\n        const gap = Math.max(100, y2.offsetTop - y1Bottom);\r\n        seg.dataset.full = gap;\r\n        seg.style.height = '0px'; // reset visual\r\n      });\r\n    }\r\n\r\n    // Only the connector corresponding to the current index stays extended\r\n    function setActive(index) {\r\n      years.forEach((y, i) => y.classList.toggle('active', i === index));\r\n      contents.forEach((c, i) => c.classList.toggle('active', i === index));\r\n\r\n      // For index 0, extend the first segment; otherwise extend the one above current year\r\n      const extendedIdx = Math.min(index, segments.length - 1);\r\n\r\n      segments.forEach((seg, i) => {\r\n        const target = (i === extendedIdx) ? (parseFloat(seg.dataset.full) || 60) : 0;\r\n        gsap.to(seg, { height: target, duration: 0.3, overwrite: 'auto' });\r\n      });\r\n    }\r\n\r\n    let tl; let currentIndex = -1;\r\n\r\n    function build() {\r\n      if (tl) { tl.scrollTrigger && tl.scrollTrigger.kill(); tl.kill(); }\r\n\r\n      tl = gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: panell,\r\n          start: \"top top\",\r\n          end: \"bottom+=2500 top\",\r\n          scrub: true,\r\n          pin: true,\r\n          anticipatePin: 1,\r\n          invalidateOnRefresh: true\r\n        }\r\n      });\r\n\r\n      // Single tween bound to panel height; we pick index from progress â†’ robust even on fast scroll\r\n      tl.to({}, {\r\n        duration: 1,\r\n        onUpdate: () => {\r\n          const steps = years.length;\r\n          const p = tl.progress();                                  // 0..1 within THIS panel\r\n          const idx = Math.min(steps - 1, Math.floor(p * steps));   // split panel progress into equal steps\r\n          if (idx !== currentIndex) { currentIndex = idx; setActive(idx); }\r\n        }\r\n      });\r\n    }\r\n\r\n    function init() {\r\n      computeSegmentHeights();\r\n\r\n      // Default: first year active & first connector extended\r\n      years[0].classList.add('active');\r\n      contents[0].classList.add('active');\r\n      if (segments[0]) gsap.set(segments[0], { height: parseFloat(segments[0].dataset.full) || 60 });\r\n\r\n      build();\r\n\r\n      // Recalculate on resize\r\n      window.addEventListener('resize', () => {\r\n        computeSegmentHeights();\r\n        // keep current active after resize\r\n        const idx = Math.max(0, years.findIndex(y => y.classList.contains('active')));\r\n        setActive(idx === -1 ? 0 : idx);\r\n        ScrollTrigger.refresh();\r\n      });\r\n    }\r\n\r\n    window.addEventListener('load', init);\r\n\r\n\r\n    }else{\r\n\r\n    const panell   = document.querySelector('.section-4');\r\n    const years    = Array.from(document.querySelectorAll('.year'));\r\n    const segments = Array.from(document.querySelectorAll('.segment'));\r\n    const contents = Array.from(document.querySelectorAll('.content'));\r\n    const yearsCol = document.getElementById('years-col');\r\n\r\n    // Measure exact gap between consecutive years; store on segment.dataset.full\r\n    function computeSegmentHeights() {\r\n      segments.forEach((seg, i) => {\r\n        const y1 = years[i];\r\n        const y2 = years[i + 1];\r\n        if (!y1 || !y2) return;\r\n        const y1Bottom = y1.offsetTop + y1.offsetHeight; // within same column\r\n        const gap = Math.max(10, y2.offsetTop - y1Bottom);\r\n        seg.dataset.full = gap;\r\n        seg.style.height = '0px'; // reset visual\r\n      });\r\n    }\r\n\r\n    // Only the connector corresponding to the current index stays extended\r\n    function setActive(index) {\r\n      years.forEach((y, i) => y.classList.toggle('active', i === index));\r\n      contents.forEach((c, i) => c.classList.toggle('active', i === index));\r\n\r\n      // For index 0, extend the first segment; otherwise extend the one above current year\r\n      const extendedIdx = Math.min(index, segments.length - 1);\r\n\r\n      segments.forEach((seg, i) => {\r\n        const target = (i === extendedIdx) ? (parseFloat(seg.dataset.full) || 60) : 0;\r\n        gsap.to(seg, { height: target, duration: 0.3, overwrite: 'auto' });\r\n      });\r\n    }\r\n\r\n    let tl; let currentIndex = -1;\r\n\r\n    function build() {\r\n      if (tl) { tl.scrollTrigger && tl.scrollTrigger.kill(); tl.kill(); }\r\n\r\n      tl = gsap.timeline({\r\n        scrollTrigger: {\r\n          trigger: panell,\r\n          start: \"top top\",\r\n          end: \"bottom+=2500 top\",\r\n          scrub: true,\r\n          pin: true,\r\n          anticipatePin: 1,\r\n          invalidateOnRefresh: true\r\n        }\r\n      });\r\n\r\n      // Single tween bound to panel height; we pick index from progress â†’ robust even on fast scroll\r\n      tl.to({}, {\r\n        duration: 1,\r\n        onUpdate: () => {\r\n          const steps = years.length;\r\n          const p = tl.progress();                                  // 0..1 within THIS panel\r\n          const idx = Math.min(steps - 1, Math.floor(p * steps));   // split panel progress into equal steps\r\n          if (idx !== currentIndex) { currentIndex = idx; setActive(idx); }\r\n        }\r\n      });\r\n    }\r\n\r\n    function init() {\r\n      computeSegmentHeights();\r\n\r\n      // Default: first year active & first connector extended\r\n      years[0].classList.add('active');\r\n      contents[0].classList.add('active');\r\n      if (segments[0]) gsap.set(segments[0], { height: parseFloat(segments[0].dataset.full) || 60 });\r\n\r\n      build();\r\n\r\n      // Recalculate on resize\r\n      window.addEventListener('resize', () => {\r\n        computeSegmentHeights();\r\n        // keep current active after resize\r\n        const idx = Math.max(0, years.findIndex(y => y.classList.contains('active')));\r\n        setActive(idx === -1 ? 0 : idx);\r\n        ScrollTrigger.refresh();\r\n      });\r\n    }\r\n\r\n    window.addEventListener('load', init);\r\n\r\n    }\r\n\r\n    // const tl55 = gsap.timeline({\r\n    //   scrollTrigger:{\r\n    //     trigger: '.section-5',\r\n    //     start: \"75% bottom\",\r\n    //     scrub: true,\r\n    //     end: \"bottom bottom\",\r\n    //     markers: true,\r\n    //   }\r\n    // });\r\n\r\n    // tl55.to('header',{\r\n    //   backgroundColor: 'transparent',\r\n    //   ease: \"power1.inOut\",\r\n    //   duration: 1\r\n    // })\r\n\r\n\r\n    const tl5 = gsap.timeline({\r\n      scrollTrigger:{\r\n        trigger: '.section-5',\r\n        start: \"30% center\",\r\n        toggleActions: \"play none none none\",\r\n        once: true,\r\n        // markers: true,\r\n      }\r\n    });\r\n\r\n    if (window.innerWidth > 1024) {\r\n      tl5.to('.section-5 .black-circle',{\r\n      opacity: 1,\r\n      scale: 1.1,\r\n      bottom: '-5%',\r\n      display: 'block',\r\n      ease: \"power1.inOut\",\r\n      duration: 1.1\r\n    })\r\n    }\r\n\r\n    tl5.fromTo('.section-5 .left-col',{\r\n      x: 50,\r\n      opacity: 0,\r\n    },{\r\n      x: 0,\r\n      opacity: 1,\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    },'same')\r\n\r\n    tl5.fromTo('.section-5 .right-col',{\r\n      y: -50,\r\n      opacity: 0,\r\n    },{\r\n      y: 0,\r\n      opacity: 1,\r\n      ease: \"power1.inOut\",\r\n      duration: 1\r\n    },'same')\r\n\r\n});\r\n\r\n\r\n"],"names":["gsap","ScrollTrigger","ScrollSmoother","tl6","whitelogo","logo","tl1","panel","items","star","visibleCount","totalItems","getItemsTotalHeight","total","item","getColumnYPercent","activeIndex","centerOffset","firstY","lastY","t","value","step","self","progress","i","amplitude","x","yPercent","tl2","tl3","computeSegmentHeights","segments","seg","y1","years","y2","y1Bottom","gap","setActive","index","y","contents","c","extendedIdx","target","build","tl","panell","steps","p","idx","currentIndex","init","tl5"],"mappings":"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"}